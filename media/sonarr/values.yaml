# https://github.com/bjw-s/helm-charts/tree/main/charts/library/common
image:
  repository: ghcr.io/onedr0p/sonarr
  tag: 3.0.10.1566
  pullPolicy: IfNotPresent

env:
  TZ: '{{ .Values.global.TZ }}'

controller:
  revisionHistoryLimit: 1

service:
  main:
    ports:
      http:
        port: 8989

ingress:
  main:
    enabled: true
    ingressClassName: traefik
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-production
      cert-manager.io/revision-history-limit: '1'
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.middlewares: argo-common-crowdsec-traefik-bouncer@kubernetescrd
    hosts:
    - host: '{{ .Chart.Name }}.{{ .Values.global.domain }}'
      paths:
      - path: /
        pathType: Prefix      
    tls:
      - secretName: '{{ .Chart.Name }}-tls'
        hosts:
          - '{{ .Chart.Name }}.{{ .Values.global.domain }}'

probes:
  liveness:
    enabled: true
    ## Set this to true if you wish to specify your own livenessProbe
    custom: true
    ## The spec field contains the values for the default livenessProbe.
    ## If you selected custom: true, this field holds the definition of the livenessProbe.
    spec:
      exec:
        command:
        - /usr/bin/env
        - bash
        - -c
        - curl --fail localhost:8989/api/v3/system/status?apiKey=`IFS=\> && while
          read -d \< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml`
      failureThreshold: 5
      initialDelaySeconds: 60
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 10

persistence:
  config:
    enabled: true
    storageClass: argo-zfspv-fast
    size: 10Gi
    accessMode: ReadWriteOnce
    retain: true
  media:
    enabled: true
    type: hostPath
    hostPath: /mnt/andromeda/media
    mountPath: /media
  nzbdl:
    enabled: true
    type: hostPath
    hostPath: /mnt/andromeda/media/nzbdl
    mountPath: /nzbdl

podSecurityContext:
  runAsUser: 1001
  runAsGroup: 1002
  fsGroup: 1002
  fsGroupChangePolicy: OnRootMismatch
  
metrics:
  enabled: true
  serviceMonitor:
    interval: 3m
    scrapeTimeout: 1m
    labels: {}
  prometheusRule:
    enabled: true
    labels: {}
    rules: []
      # - alert: SonarrDown
      #   annotations:
      #     description: Sonarr service is down.
      #     summary: Sonarr is down.
      #   expr: |
      #     sonarr_system_status == 0
      #   for: 5m
      #   labels:
      #     severity: critical
  exporter:
    image:
      repository: ghcr.io/onedr0p/exportarr
      tag: v1.1.0
      pullPolicy: IfNotPresent
    env:
      port: 9794
      additionalMetrics: true
      unknownQueueItems: true
