---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/common-3.0.3/charts/library/common/values.schema.json
controllers:
  main:
    revisionHistoryLimit: 1

    containers:
      main:
        image:
          repository: ghcr.io/onedr0p/sonarr
          tag: 4.0.9.2244
          pullPolicy: IfNotPresent
       
        env:
          TZ: '{{ .Values.global.TZ }}'

        probes:
          liveness:
            enabled: true
            custom: true
            spec:
              exec:
                command:
                - /usr/bin/env
                - bash
                - -c
                - curl --fail localhost:8989/api/v3/system/status?apiKey=`IFS=\> && while
                  read -d \< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml`
              failureThreshold: 5
              initialDelaySeconds: 60
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 10
      
      exporter:
        image:
          repository: ghcr.io/onedr0p/exportarr
          tag: v2.0.1
          pullPolicy: IfNotPresent
        
        args:
          - sonarr

        env:
          PORT: 9989
          URL: 'https://{{ .Chart.Name }}.{{ .Values.global.domain }}'
        
        envFrom:
          - secretRef:
              name: sonarr-exportarr-env
service:
  main:
    controller: main
    ports:
      http:
        port: 8989
  exporter:
    controller: main
    ports:
       http:
         port: 9989

ingress:
  main:
    enabled: true
    ingressClassName: traefik
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-production
      cert-manager.io/revision-history-limit: '1'
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
    hosts:
    - host: '{{ .Chart.Name }}.{{ .Values.global.domain }}'
      paths:
      - path: /
        pathType: Prefix
        service:
          identifier: main
          port: http
    tls:
      - secretName: '{{ .Chart.Name }}-tls'
        hosts:
          - '{{ .Chart.Name }}.{{ .Values.global.domain }}'

serviceMonitor:
  exporter:
    enabled: true
    serviceName: '{{ .Chart.Name }}-exporter'
    endpoints:
      - port: http
        scheme: http
        path: /metrics
        interval: 1m
        scrapeTimeout: 10s

persistence:
  config:
    enabled: true
    storageClass: argo-zfspv-fast
    size: 10Gi
    accessMode: ReadWriteOnce
    retain: true
  media:
    enabled: true
    type: hostPath
    hostPath: /mnt/andromeda/media
    globalMounts:
      - path: /media
  nzbdl:
    enabled: true
    type: hostPath
    hostPath: /mnt/andromeda/media/nzbdl
    globalMounts:
      - path: /nzbdl

defaultPodOptions:
  securityContext:
    runAsUser: 1001
    runAsGroup: 1002
    fsGroup: 1002
    fsGroupChangePolicy: "OnRootMismatch"

