# https://github.com/bjw-s/helm-charts/tree/main/charts/library/common
controllers:
  main:
    revisionHistoryLimit: 1
    
    pod:
      runtimeClassName: nvidia
      
    containers:
      main:
        image:
          repository: ghcr.io/onedr0p/plex
          tag: 1.40.0.7998-c29d4c0c8
          pullPolicy: IfNotPresent
          
        env:
          TZ: '{{ .Values.global.TZ }}'
          NVIDIA_VISIBLE_DEVICES: all
          NVIDIA_DRIVER_CAPABILITIES: compute,video,utility

        resources:
          requests:
            nvidia.com/gpu: 1
            cpu: 200m
            memory: 1024Mi
          limits:
            nvidia.com/gpu: 1
            memory: 3072Mi

      exporter:
        image:
          repository: ghcr.io/axsuul/plex-media-server-exporter
          tag: 1.1.3
          pullPolicy: IfNotPresent
        
        env:
          PLEX_ADDR: 'https://{{ .Chart.Name }}.{{ .Values.global.domain }}'

        securityContext:
          runAsUser: 0
          runAsGroup: 0
        
        envFrom:
          - secretRef:
              name: plex-exporter-env

# https://support.plex.tv/articles/201543147-what-network-ports-do-i-need-to-allow-through-my-firewall/
service:
  main:
    enabled: true
    type: NodePort
    ports:
      http:
        port: 32400
        protocol: TCP
        nodePort: 32400
    externalTrafficPolicy: Local
  # DLNA UDP: 1900, TCP: 32469 (disabled)
  #dlna:
  #  enabled: true
  #  type: NodePort
  #  ports:
  #    dlna-udp:
  #      enabled: true
  #      port: 1900
  #      protocol: UDP
  #      nodePort: 1900
  #    dlna-tcp:
  #      enabled: true
  #      port: 32469
  #      protocol: TCP
  #      nodePort: 32469
  #  externalTrafficPolicy: Local
  # Roku/Plex Companion: TCP 8324 (disabled)
  #roku:
  #  enabled: true
  #  type: NodePort
  #  ports:
  #    roku:
  #      enabled: true
  #      port: 8324
  #      protocol: TCP
  #      nodePort: 8324
  #  externalTrafficPolicy: Local
  # GDM UDP: 32410, 32412, 32413, 32414
  gdm:
    enabled: true
    controller: main
    type: NodePort
    ports:
      gdm-udp0:
        enabled: true
        port: 32410
        protocol: UDP
        nodePort: 32410
      gdm-udp2:
        enabled: true
        port: 32412
        protocol: UDP
        nodePort: 32412
      gdm-udp3:
        enabled: true
        port: 32413
        protocol: UDP
        nodePort: 32413
      gdm-udp4:
        enabled: true
        port: 32414
        protocol: UDP
        nodePort: 32414
    externalTrafficPolicy: Local
  exporter:
    controller: main
    ports:
       http:
         port: 9594

ingress:
  main:
    enabled: true
    ingressClassName: traefik
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-production
      cert-manager.io/revision-history-limit: '1'
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
    hosts:
    - host: '{{ .Chart.Name }}.{{ .Values.global.domain }}'
      paths:
      - path: /
        pathType: Prefix
        service:
          name: main
    tls:
      - secretName: '{{ .Chart.Name }}-tls'
        hosts:
          - '{{ .Chart.Name }}.{{ .Values.global.domain }}'

serviceMonitor:
  exporter:
    enabled: true
    serviceName: '{{ .Chart.Name }}-exporter'
    endpoints:
      - port: http
        scheme: http
        path: /metrics
        interval: 1m
        scrapeTimeout: 10s

persistence:
  config:
    enabled: true
    storageClass: argo-zfspv-fast
    size: 300Gi
    accessMode: ReadWriteOnce
    retain: true
  transcode:
    enabled: true
    storageClass: argo-zfspv-fast
    size: 300Gi
    accessMode: ReadWriteOnce
    retain: true
  data:
    enabled: true
    type: hostPath
    hostPath: /mnt/andromeda/media
    globalMounts:
      - path: /data
        readOnly: true

defaultPodOptions:
  securityContext:
    runAsUser: 1001
    runAsGroup: 1002
    fsGroup: 1002
    fsGroupChangePolicy: "OnRootMismatch"
    supplementalGroups:
      - 107 # render
      - 44 # video
